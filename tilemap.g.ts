// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Level0":
            case "level1":return tiles.createTilemap(hex`20000a`, img`
................................
................................
...................222..........
.......2222.......2...2.2222....
2222222.....222222..........2...
.............................2..
..............................22
................................
................................
................................
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.hazardLava1,myTiles.tile1,myTiles.tile2,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23], TileScale.Sixteen);
            case "Level1":
            case "level3":return tiles.createTilemap(hex`40000a`, img`
................................................................
...........................................................2....
..........................................................2.....
......................................2...222............2......
.....................................2................22........
.........................222........2...........2222............
22222...222...222....222........2222......................222222
................................................................
................................................................
................................................................
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,myTiles.tile1,myTiles.tile2,sprites.builtin.forestTiles0,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23], TileScale.Sixteen);
            case "Level2":
            case "Level2":return tiles.createTilemap(hex`c0000000000000000000000000000000c0000000000000000000000000000000c08090909090a0000000000000000000c0000000000000000000000000000000c0000000000000000000000000000000c0000000000000000000000000000000c00000000000000000000000000000007000000000000000000000000000000000700070007000700070008090a00000000000000000000000000000000000700000000000000000000080909090a0007000000080909090a00000000000000000700000000000000000000000000000000070000000000000b00000000000000000007000000000000000000000000000000000700000000000000000000000000000000070000000000000000000000000000000007000000000000000000000000000000000700000000000000000000000000000000000809090a`, img`
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
................
.222222.........
................
................
................
................
2...............
.2.2.2.2.2.222..
...............2
..........22222.
2...22222.......
.2..............
..2.............
...2............
....2...........
.....2..........
......2.........
.......2........
.........2222...
...............2
...........2222.
2....2222.......
..........222222
...2222222......
22..............
..2222222.......
...........22222
..........2.....
2222222222......
................
................
................
................
................
................
................
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.builtin.forestTiles21,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23,sprites.builtin.forestTiles0,sprites.dungeon.collectibleRedCrystal,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile10], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Finish line":
            case "tile1":return tile1;
            case "Finish Block":
            case "tile2":return tile2;
            case "forestTiles0":
            case "tile3":return tile3;
            case "forestTiles21":
            case "tile4":return tile4;
            case "forestTiles22":
            case "tile5":return tile5;
            case "forestTiles23":
            case "tile6":return tile6;
            case "collectibleRedCrystal":
            case "tile7":return tile7;
            case "collectibleBlueCrystal":
            case "tile8":return tile8;
            case "stairLadder":
            case "tile9":return tile9;
            case "stairSouth":
            case "tile10":return tile10;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
